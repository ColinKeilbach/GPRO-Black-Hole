vec4 calcColor(in sViewport vp, in sRay ray)
{
    //get inverse of the resolution
    vec2 invRes = 1.0 / iChannelResolution[0].xy;
    
    //get location of pixel on channel a
    vec2 uv = vp.pixelCoord * invRes;
    vec2 uvUpRightCorner = (vp.pixelCoord + 0.5) * invRes;
    
    //return channel 1 color data
    vec4 returnColor = texture(iChannel0, uv); //returning return color without bloom will return the samething as channel a
    
    return returnColor;
}


//Output
void mainImage(out vec4 fragColor, in vec2 fragCoord)
{
    // viewing plane (viewport) inputs
    const vec3 eyePosition = vec3(0.0);
    const float viewportHeight = 2.0, focalLength = 1.5;
    
    // viewport info
    sViewport vp;

    // ray
    sRay ray;
    
    // render
    initViewport(vp, viewportHeight, focalLength, fragCoord, iResolution.xy);
    initRayPersp(ray, eyePosition, vp.viewportPoint.xyz);
    fragColor += calcColor(vp, ray);
}
